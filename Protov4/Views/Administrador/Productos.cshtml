@using Protov4.DTO;
@{
    Layout = "~/Views/Administrador/_LayoutAdmin.cshtml";
}
@model List<ProductoDTO>
<div>
    <h1>Lista de productos</h1>
</div>
<div>
    <button class="btn btn-secondary" id="crearProductoBtn">Crear Nuevo</button>
</div>
<div class="card-container">
    @foreach (var carr in Model)
    {
        var imagenBytes = carr.Imagen;
        var base64 = "data:image/png;base64," + Convert.ToBase64String(imagenBytes);

        <div class="card">
            <img src="@base64" alt="@carr.Nombre_Producto" class="card-img-top">
            <div class="card-body">
                <h5 class="card-title">@carr.Nombre_Producto</h5>
                <p class="card-text">Precio: $@carr.Precio</p>
                <p class="card-text">Marca: @carr.Marca</p>
                <p class="card-text">Existencias: @carr.Existencia</p>
                <p class="card-text">Tipo: @carr.Tipo</p>
                <div class="card-buttons">
                    <form action="@Url.Action("EditarProducto", "Administrador",new{_id=carr.Id})" method="post">
                    <button class="btn btn-primary shadow-sm editBtn"  ><i class="bi bi-pencil-square"></i> Editar</button>
                    </form>
                    <form class="deleteForm" id="deleteForm-@carr.Id" action="@Url.Action("eliminarProducto", "Administrador")" method="post">
                        <input type="hidden" name="id" value="@carr.Id" />
                        <button class="btn btn-danger shadow-sm" type="submit"><i class="bi bi-trash3"></i> Eliminar</button>
                    </form>
                </div>
            </div>
        </div>
    }
</div>

<!-- Formulario de edición oculto -->



<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>

        deleteForms.forEach(function (deleteForm) {
            deleteForm.addEventListener("submit", function (event) {
                event.preventDefault(); // Prevenir el envío del formulario de inmediato

                var productId = deleteForm.querySelector('input[name="id"]').value;

                Swal.fire({
                    title: 'Eliminar Producto',
                    text: '¿Estás seguro de que quieres eliminar este Producto?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Sí, eliminar',
                    cancelButtonText: 'Cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Enviar el formulario de eliminación al servidor
                        deleteForm.submit();
                    }
                });
            });
        });

        document.getElementById("crearProductoBtn").addEventListener("click", function () {
            Swal.fire({
                title: 'Crear Nuevo Producto',
                text: '¿Quieres crear un nuevo Producto?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Sí',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Redirect to the "CrearNuevoProducto" action
                    window.location.href = "@Url.Action("CrearNuevoProducto", "Administrador")";
                }
            });
        });
    });
</script>
